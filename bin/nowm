#!/bin/sh

resize() { xdotool getwindowfocus windowsize "${1:-0}" "${2:-0}"; }

resize_relative() {
    eval "$(xdotool getwindowfocus getwindowgeometry --shell | head -n5)"
    W_WIDTH=$(( WIDTH + "${1:-0}" )); W_HEIGHT=$(( HEIGHT + "${2:-0}" ))
    eval "$(xdotool getdisplaygeometry --shell)"
    DR_WIDTH="$(( WIDTH - X ))"; DR_HEIGHT="$(( HEIGHT - Y ))"
    [ "${W_WIDTH}"  -lt 1 ] && W_WIDTH=1  || [ "${W_WIDTH}"  -gt "${DR_WIDTH}"  ] && W_WIDTH="${DR_WIDTH}"
    [ "${W_HEIGHT}" -lt 1 ] && W_HEIGHT=1 || [ "${W_HEIGHT}" -gt "${DR_HEIGHT}" ] && W_HEIGHT="${DR_HEIGHT}"
    xdotool windowsize "${WINDOW}" "${W_WIDTH}" "${W_HEIGHT}"
}

move() { xdotool getwindowfocus windowmove "${1:-0}" "${2:-0}"; }

move_relative() { xdotool getwindowfocus windowmove --relative "${1:-0}" "${2:-0}"; }

center() {
    eval "$(xdotool getwindowfocus getwindowgeometry --shell | tail -n3 | head -n2)"
    W_WIDTH="${WIDTH}"; W_HEIGHT="${HEIGHT}"
    eval "$(xdotool getdisplaygeometry --shell)"
    move "$(( (WIDTH - W_WIDTH) / 2 ))" "$(( (HEIGHT - W_HEIGHT) / 2 ))"
}

snap() {
    eval "$(xdotool getwindowfocus getwindowgeometry --shell | head -n5)"
    W_WIDTH="${WIDTH}"; W_HEIGHT="${HEIGHT}"
    eval "$(xdotool getdisplaygeometry --shell)"
    case "${1:-0}" in
        left)   move 0 y                         ;;
        bottom) move x "$(( HEIGHT - W_HEIGHT ))";;
        top)    move x 0                         ;;
        right)  move "$(( WIDTH - W_WIDTH ))" y  ;;
        *)      move x y                         ;;
    esac
}

pointer_focus() { xdotool getmouselocation windowfocus; }

select_focus() { xdotool selectwindow windowfocus; }

close() { xdotool getwindowfocus windowclose; }

quit() { xdotool getwindowfocus windowquit;  }

window_kill() { xdotool getwindowfocus windowkill;  }

nowm_logout() { pkill -KILL -u "$(whoami)"; }

nowm_main() {
    NOWM_AUTOSTART="${XDG_CONFIG_HOME:-${HOME}/.config}/nowm/autostart"
    [ -x "${NOWM_AUTOSTART}" ] && "${NOWM_AUTOSTART}" >/dev/null 2>&1 &
    while : ; do : ; done
}

noargs() { if [ -z "${DISPLAY}" ]; then exec startx "$(which nowm)"; else nowm_main; fi; }

case "${1}" in
    "")              noargs || exit 1             ;;
    resize)          resize          "${2}" "${3}";;
    resize_relative) resize_relative "${2}" "${3}";;
    move)            move            "${2}" "${3}";;
    move_relative)   move_relative   "${2}" "${3}";;
    center)          center                       ;;
    snap)            snap            "${2}"       ;;
    pointer_focus)   pointer_focus                ;;
    select_focus)    select_focus                 ;;
    close)           close                        ;;
    quit)            quit                         ;;
    kill)            window_kill                  ;;
    logout)          nowm_logout                  ;;
    *)               exit 1                       ;;
esac
