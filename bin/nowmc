#!/usr/bin/env bash

relative_geometry() {
    eval "$(xdotool getwindowfocus getwindowgeometry --shell)"
    WX="${X}"
    WY="${Y}"
    W_WIDTH="${WIDTH}"
    W_HEIGHT="${HEIGHT}"
    eval "$(xdotool getdisplaygeometry --shell)"
    D_WIDTH="$((WIDTH - X))"
    D_HEIGHT="$((HEIGHT - Y))"
}

resize() {
    relative_geometry
    W_WIDTH=$((W_WIDTH + "${1:-0}"))
    W_HEIGHT=$((W_HEIGHT + "${2:-0}"))
    [ "${W_WIDTH}"  -lt 1 ] && W_WIDTH=1  || [ "${W_WIDTH}"  -gt "${D_WIDTH}"  ] && W_WIDTH="${D_WIDTH}"
    [ "${W_HEIGHT}" -lt 1 ] && W_HEIGHT=1 || [ "${W_HEIGHT}" -gt "${D_HEIGHT}" ] && W_HEIGHT="${D_HEIGHT}"
    xdotool getwindowfocus windowsize "${W_WIDTH}" "${W_HEIGHT}"
}

move() {
    relative_geometry
    WX=$((WX + "${1:-0}"))
    WY=$((WY + "${2:-0}"))
    [ "${WX}" -lt 0 ] && WX=0 || [ "${WX}" -gt "${D_WIDTH}"  ] && WX="$((D_WIDTH - W_WIDTH))"
    [ "${WY}" -lt 0 ] && WY=0 || [ "${WY}" -gt "${D_HEIGHT}" ] && WY="$((D_HEIGHT - W_HEIGHT))"
    xdotool getwindowfocus windowmove "${WX}" "${WY}"
}

focus() {
    FOCUSING=$(xdotool getwindowfocus)
    declare "$(xdotool getmouselocation --shell | grep WINDOW)"
    [ "${WINDOW}" -eq 0 ] && WINDOW="$(xdotool selectwindow)"
    [ "${FOCUSING}" -eq "${WINDOW}" ] || xdotool windowfocus "${WINDOW}" windowraise "${WINDOW}"
}

center() {
    relative_geometry
    WX=$(( (WIDTH - W_WIDTH) / 2 ))
    WY=$(( (HEIGHT - W_HEIGHT) / 2 ))
    xdotool getwindowfocus windowmove "${WX}" "${WY}"
}

close() { xdotool getwindowfocus windowclose; }

quit()  { xdotool getwindowfocus windowquit;  }

killw() { xdotool getwindowfocus windowkill;  }

exit_nowm() {
    if [ -f "${NOWM_CONFIG_HOME}/nowm.pid" ]; then
        kill $(cat "${NOWM_CONFIG_HOME}/nowm.pid")
        rm -f "${NOWM_CONFIG_HOME}/nowm.pid"
    fi
}

case "${1}" in
    resize)      resize "${2}" "${3}";;
    move)        move   "${2}" "${3}";;
    focus)       focus               ;;
    center)      center              ;;
    close)       close               ;;
    quit)        quit                ;;
    kill)        killw               ;;
    exit_nowm)   exit_nowm           ;;
    *)           exit 1              ;;
esac

